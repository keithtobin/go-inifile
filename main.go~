package main

import (
	"github.com/keithtobin/go-inifile/ini_file"
	"fmt"
	"os"

)


func main() {
	//file, _ := inifile.New()
	//_, err := file.ReadFile("/home/keith/dev/go/src/cloud-guy.net/ini_config/nova.conf.sample")

	file, err := inifile.NewFromFile("/home/keith/dev/go/src/cloud-guy.net/ini_config/nova.conf.sample")
	if err != nil {
		fmt.Println("Error opening file..............")
		os.Exit(1)
	}

	fmt.Println(file.NumberOfSections()) 

	for _,i := range file.GetSections() {
		fmt.Println(i.Key) 
	}

	nf, _ := file.GetSection("spice")
	fmt.Println(nf)

	for _, m := range nf.Items {
		fmt.Println(m.GetType() + "(" + m.GetString() + ")")
	}

	fmt.Print(file.GetString())
	
	file.ChangeSectionKeyValue("spice", "agent_enabled", "false")

	file.Save()
	//file.SaveTo("/tmp/dog.txt")

	return
/*	
	var f [2]int
	fmt.Println(f)

	var x = [2]int{1,2}
	fmt.Println(x)

	var m = [...]int{1,2}
	fmt.Println(m)

	var z = []int{1,2}
	fmt.Println(z)
	
	a := []int{1,2}
	fmt.Println(a)
*/

	//Slices

	b := []int{0,1,2,3,4,5,6,7,8,9}
	fmt.Println(b)	
	fmt.Println(b[0])
	fmt.Println(b[:5])
	fmt.Println(len(b))
	fmt.Println(b[:len(b)])
	
	c := []int{10,11,12,13,14,15,16,17,18,19}
	fmt.Println(c)

	b = append(b,c[0])
	fmt.Println(b)

	a := []int{1,2,3}
	a = append(a, 4)
	fmt.Println(a)

	d := make([]int,10)
	fmt.Println(d)

	//Add one to the end
	e := make([]int, 10,20)
	e = append(e, 9)
	fmt.Println(e)

	//Make a copy
	f := make([]int, 11)
	copy(f,e)
	fmt.Println(f)

	//Take one off the end
	f[10] = 10
	g, h := f[len(f)-1], f[:len(f)-1]
	
	fmt.Println(g) 
	fmt.Println(h)

	//Maps
	i := make(map[string]string)
	i["roger"] = "roger"
	j := i["roger"]
	fmt.Println(i)
	fmt.Println(j)
	delete(i,"roger")
	fmt.Println(i)


 



}
